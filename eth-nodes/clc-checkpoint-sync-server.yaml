apiVersion: v1
kind: ConfigMap
metadata:
  name: server-config
data:
  entrypoint.sh: |
    #!/bin/sh
    cp /local-testnet-bootstrap/genesis.ssz /srv/
    python3 -u -m http.server 8080 --directory /srv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-testnet-bootstrap-pv
spec:
  capacity:
    storage: 100Mi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: local-testnet-bootstrap
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kind-worker2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-testnet-bootstrap-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Pod
metadata:
  name: checkpoint-sync-server
  labels:
    app.kubernetes.io/name: checkpoint-sync-server
spec:
  terminationGracePeriodSeconds: 3
  volumes:
    - name: local-testnet-bootstrap
      persistentVolumeClaim:
        claimName: local-testnet-bootstrap-pvc
    - name: server-config
      configMap:
        name: server-config
  containers:
  - name: checkpoint-sync-server
    image: python:3.9-slim
    command: ["/bin/sh", "/config/entrypoint.sh"]
    volumeMounts:
    - name: local-testnet-bootstrap
      mountPath: /local-testnet-bootstrap
    - name: server-config
      mountPath: /config
    ports:
    - containerPort: 8080
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: checkpoint-sync-server
  labels:
    app.kubernetes.io/name: checkpoint-sync-server
spec:
  selector:
    app.kubernetes.io/name: checkpoint-sync-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
